1번 
       public static void main(String[] args) {
	int sum =0, i = 1;
	 while (true) {
	   if(i > 50)
	     break;
	 sum = sum + i;
	 i += 3;
	}
	
	System.out.println(sum);
	}
(1)무엇을 계산하는 코드인가? 실행 결과 출력되는 내용은?

답: 1분터 시작해서 3씩 증가하는 수들의 합을 구하는 프로그램/출력 값: 265

(2)위의 코드를 main() 메소드로 만들고 whileLoop 클래스로 완성하라.

public static void main(String[] args) {
    int sum = 0, i = 1;
    while (true) {
        if (i > 50) {
            break;  // i가 50을 넘으면 루프 종료
        }
        sum += i;  // sum에 i 더하기
        i += 3;  // i를 3씩 증가
    }
    System.out.println(sum);  // 결과 출력
}
(3)for 문을 이용하여 동일하게 실행되는 ForLoop 클래스를 작성하라.

public static void main(String[] args) {
    int sum = 0;
    for (int i = 1; i <= 50; i += 3) {  // i가 1부터 시작해 50 이하일 때까지 3씩 증가
        sum += i;  // sum에 i 더하기
    }
    System.out.println(sum);  // 결과 출력
}
(4)do-while 문을 이용하여 동일하게 실행되는 DoWhileLoop 클래스를 작성하라.

public static void main(String[] args) {
    int sum = 0, i = 1;
    do {
        sum += i;  // sum에 i 더하기
        i += 3;  // i를 3씩 증가
    } while (i <= 50);  // i가 50 이하일 때까지 반복
    System.out.println(sum);  // 결과 출력
}

2번. 
    public static void main(String[] args) {
	 int n[] = {1, -2, 6, 20, 5, 72, -16, 256};
	 for(int i=0; i<n.length; i++) {
	   if(n[i] > 0 && n[i] % 4 == 0) {
	      System.out.print(n[i] + " ");
	   }
	 }
 }
(1)무엇을 계산하는 코드인가? 실행 결과 출력되는 내용은?

답: 주어진 코드는 배열 n에 있는 숫자 중에서 양수이며 4로 나누어 떨어지는 수를 찾아 출력하는 프로그램

출력 결과:20 72 256

(2)위의 코드를 main() 메소드로 만들고 whileLoop 클래스로 완성하라.

public static void main(String[] args) {
    int n[] = {1, -2, 6, 20, 5, 72, -16, 256};
    int i = 0;
    
    // while 문을 사용하여 배열을 순회
    while (i < n.length) {
        if (n[i] > 0 && n[i] % 4 == 0) {
            System.out.print(n[i] + " "); // 조건을 만족하면 출력
        }
        i++; // 인덱스 증가
    }
}
(3)for 문을 이용하여 동일하게 실행되는 ForLoop 클래스를 작성하라.

public static void main(String[] args) {
    int n[] = {1, -2, 6, 20, 5, 72, -16, 256};
    
    // for 문을 사용하여 배열을 순회
    for (int i = 0; i < n.length; i++) {
        if (n[i] > 0 && n[i] % 4 == 0) {
            System.out.print(n[i] + " "); // 조건을 만족하면 출력
        }
    }
}
(4)do-while 문을 이용하여 동일하게 실행되는 DoWhileLoop 클래스를 작성하라.

public static void main(String[] args) {
    int n[] = {1, -2, 6, 20, 5, 72, -16, 256};
    int i = 0;

    // do-while 문을 사용하여 배열을 순회
    do {
        if (n[i] > 0 && n[i] % 4 == 0) {
            System.out.print(n[i] + " "); // 조건을 만족하면 출력
        }
        i++; // 인덱스 증가
    } while (i < n.length); // 인덱스가 배열 길이보다 작은 동안 반복
}
3번 
public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int number;

    // 양의 정수가 입력될 때까지 반복
    while (true) {
        System.out.print("양의 정수 입력>> ");
        number = scanner.nextInt(); // 사용자로부터 정수 입력받기
        
    // 입력된 양의 정수만큼 '*' 출력 (가장 큰 수부터 1씩 줄어들며)
    for (int i = number; i > 0; i--) {
        for (int j = 0; j < i; j++) {
            System.out.print("*"); // '*' 출력
        }
        System.out.println(); // 줄바꿈
    }
    
    scanner.close(); // Scanner 객체 닫기

    }
}

4번. int n [] [] = {{1,2,3,}, {1,2,}, {1}, {1,2,3,}, {1,2,3,4}}; 1 2 3

1 2

1

1 2 3

1 2 3 4

 public static void main(String[] args) {
        int n[][] = {{1, 2, 3},{1, 2}, {1}, {1, 2, 3}, {1, 2, 3, 4}};

        // 2차원 배열의 각 행을 출력
        for (int i = 0; i < n.length; i++) {
            for (int j = 0; j < n[i].length; j++) {
                System.out.print(n[i][j] + "\t"); // 각 요소를 탭으로 구분하여 출력
            }
            System.out.println(); // 각 행의 끝에서 줄바꿈
        }
    }

5번. public static void main(String[] args) {
     Scanner scanner = new Scanner(System.in);
    int[] numbers = new int[10]; // 양의 정수를 저장할 배열 선언

	        // 10개의 양의 정수 입력받기
       System.out.print("양의 정수 10개 입력>> ");
  for (int i = 0; i < numbers.length; i++) {
     numbers[i] = scanner.nextInt(); // 배열에 정수 저장
 }

 System.out.print("3의 배수: ");
 
 // 배열에 저장된 정수 중 3의 배수만 출력
 for (int num : numbers) {
     if (num % 3 == 0) {
         System.out.print(num + " "); // 3의 배수 출력
     }
 }

 System.out.println(); // 줄바꿈
 scanner.close(); // Scanner 객체 닫기

6번. public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
int[] numbers = new int[10]; // 양의 정수를 저장할 배열 선언

// 10개의 양의 정수 입력받기
System.out.print("양의 정수 10개 입력>> ");
for (int i = 0; i < numbers.length; i++) {
    numbers[i] = scanner.nextInt(); // 배열에 정수 저장
}

System.out.println("자리수의 합이 9인 수: ");

// 배열에서 각 수의 자리수 합을 계산하고 출력
for (int num : numbers) {
    if (sumOfDigits(num) == 9) {
        System.out.print(num + " "); // 자리수의 합이 9인 경우 출력
    }
}

System.out.println(); // 줄바꿈
scanner.close(); // Scanner 객체 닫기
}

 // 자리수의 합을 계산하는 메소드
 public static int sumOfDigits(int number) {
int sum = 0;
while (number > 0) {
    sum += number % 10; // 현재 자리수 더하기
    number /= 10; // 다음 자리수로 이동
}
return sum;
}

7번. public static void main(String[] args) {
 int[] numbers = new int[10]; // 정수를 저장할 배열 선언
 Random random = new Random(); // Random 객체 생성

 // 11~19 범위의 랜덤 정수 생성하여 배열에 저장
 for (int i = 0; i < numbers.length; i++) {
     numbers[i] = random.nextInt(9) + 11; // 11부터 19까지의 정수 생성
 }

 // 배열 내용 출력
 System.out.print("배열에 저장된 정수들: ");
 for (int num : numbers) {
     System.out.print(num + " ");
 }

 // 평균 계산
 double average = calculateAverage(numbers);
 System.out.println("\n평균: " + average);
 }

 // 평균을 계산하는 메소드
 public static double calculateAverage(int[] numbers) {
 int sum = 0;
 for (int num : numbers) {
     sum += num; // 모든 요소의 합 계산
 }
 return (double) sum / numbers.length; // 평균 계산
 }

8번.  public static void main(String[] args) {
     Scanner scanner = new Scanner(System.in);
     Random random = new Random();

     // 몇 개의 정수를 저장할 것인지 입력받기
     System.out.print("저장할 정수의 개수를 입력하세요: ");
     int count = scanner.nextInt();

     // Set을 사용하여 중복되지 않는 정수 저장
     Set<Integer> uniqueNumbers = new HashSet<>();

     // 1~100 범위의 랜덤 정수를 Set에 저장
     while (uniqueNumbers.size() < count) {
         uniqueNumbers.add(random.nextInt(100) + 1); // 1부터 100까지의 랜덤 정수
     }

     // 배열로 변환
     Integer[] numbers = uniqueNumbers.toArray(new Integer[0]);

     // 배열 내용 출력
     System.out.print("저장된 정수들: ");
     for (int num : numbers) {
         System.out.print(num + " ");
     }

     // 평균 계산
     double average = calculateAverage(numbers);
     System.out.println("\n평균: " + average);

     scanner.close(); // Scanner 객체 닫기
 }

 // 평균을 계산하는 메소드
 public static double calculateAverage(Integer[] numbers) {
     int sum = 0;
     for (int num : numbers) {
         sum += num; // 모든 요소의 합 계산
     }
     return (double) sum / numbers.length; // 평균 계산
 }

9번. public static void main(String[] args) {
 int[][] array = new int[4][4]; // 4x4 크기의 2차원 배열 선언
 Random random = new Random(); // Random 객체 생성

 // 0~255 범위의 랜덤 정수 생성하여 배열에 저장
 for (int i = 0; i < array.length; i++) {
     for (int j = 0; j < array[i].length; j++) {
         array[i][j] = random.nextInt(256); // 0부터 255까지의 랜덤 정수 생성
     }
 }

 // 배열 출력
 System.out.println("4x4 배열:");
 for (int i = 0; i < array.length; i++) {
     for (int j = 0; j < array[i].length; j++) {
         System.out.print(array[i][j] + "\t"); // 탭으로 간격을 두고 출력
     }
     System.out.println(); // 각 행 출력 후 줄바꿈
 }
}


