5. GridLayout을 이용하여 실행결과에 같이 Color.WHITE, Color.GRAY, Color.RED등 16개의 색을 배경색으로 하는 4x4 바둑판을 구성하라
import java.awt.*;
import javax.swing.*;

public class Plate4x4Frame extends JFrame {
	private Color [] color = {Color.RED, Color.ORANGE, Color.YELLOW, Color.GREEN,
							Color.CYAN, Color.BLUE, Color.MAGENTA, Color.GRAY,
							Color.PINK, Color.LIGHT_GRAY, Color.WHITE, Color.DARK_GRAY,
							Color.BLACK, Color.ORANGE, Color.BLUE,Color.MAGENTA}; 

	public Plate4x4Frame() {
		super("4x4 Color 프레임");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		Container c = getContentPane(); // 컨텐트팬 알아내기
		c.setLayout(new GridLayout(4, 4)); // 컨텐트팬에 4x4 격자의 GridLayout 배치관리자 지정
		
		JLabel [] label = new JLabel [16]; // 16개의 JLabel 객체에 대한 레퍼런스 배열 생성
		for(int i=0; i<label.length; i++) {
			label[i] = new JLabel(Integer.toString(i)); // JLabel 객체 생성
			label[i].setOpaque(true); // JLabel 객체의 배경색이 불투명하게 출력되도록 지정
			label[i].setBackground(color[i]); // JLabel 객체에 배경색 설정
			c.add(label[i]); // JLabel 객체를 컨텐트팬에 부착
		}
		setSize(500,200);
		setVisible(true);
	}
	
	public static void main(String[] args) {
		new Plate4x4Frame();
	}

}
  


10.스윙을 이용하여 실행 결과와 같은 모양의 GUI 응용프로그램을 작성하라. 프로그램을 실행하면 총 15개의 별('*') 문자가 랜덤한 위치에 출력되게 하라. 이 문제에 있는 버튼들을 클릭할 때 별의 위치를 재조정하는 등 이벤트를 처리하는 것은 10장의 실습문제에서 다룬다.
mport javax.swing.*;
import java.awt.*;
import java.util.Random;

public class RandomStarsApp extends JFrame {
    public RandomStarsApp() {
        setTitle("Random Stars");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 400);
        setLocationRelativeTo(null); // 화면 중앙에 표시
        add(new StarsPanel());
    }

    class StarsPanel extends JPanel {
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.setFont(new Font("Monospaced", Font.BOLD, 18));
            Random rand = new Random();
            for (int i = 0; i < 15; i++) {
                int x = rand.nextInt(getWidth() - 20); // 패널 너비 내에서 랜덤 X 좌표
                int y = rand.nextInt(getHeight() - 20); // 패널 높이 내에서 랜덤 Y 좌표
                g.drawString("*", x, y);
            }
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            RandomStarsApp app = new RandomStarsApp();
            app.setVisible(true);
        });
    }
}

